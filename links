// Refer hash function : http://www.azillionmonkeys.com/qed/hash.html
// Refer Pimpl points : https://marcmutz.wordpress.com/translated-articles/pimp-my-pimpl-%E2%80%94-reloaded/
// Refer #include guard description : http://stackoverflow.com/questions/14909997/why-arent-my-include-guards-preventing-recursive-inclusion-and-multiple-symbol
// Refer template instantiation : http://stackoverflow.com/questions/8752837/undefined-reference-to-template-class-constructor
// Refer alogrithm code : http://www.keithschwarz.com/interesting/code/
// Refer C++ programming : http://boqian.weebly.com/c-programming.html
// Refer Graphs, Cycle detection : http://algo.epfl.ch/_media/en/courses/2011-2012/algorithmique-cycles-2011a.pdf
// Refer next_permutation : http://wordaligned.org/articles/next-permutation | http://www.nayuki.io/page/next-lexicographical-permutation-algorithm
// Refer leetcode solutions : https://github.com/haoel/leetcode/tree/master/algorithms/cpp
// Refer hackerrank solutions : https://www.martinkysel.com/hackerrank-solutions/
// Logistic regresion : http://aimotion.blogspot.com/2011/11/machine-learning-with-python-logistic.html
                        https://www.kunxi.org/notes/Machine_Learning/Logistic_Regression/
// Python - call by value of reference - https://jeffknupp.com/blog/2012/11/13/is-python-callbyvalue-or-callbyreference-neither/
